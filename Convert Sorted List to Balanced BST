/**
 * Definition of ListNode
 * class ListNode {
 * public:
 *     int val;
 *     ListNode *next;
 *     ListNode(int val) {
 *         this->val = val;
 *         this->next = NULL;
 *     }
 * }
 * Definition of TreeNode:
 * class TreeNode {
 * public:
 *     int val;
 *     TreeNode *left, *right;
 *     TreeNode(int val) {
 *         this->val = val;
 *         this->left = this->right = NULL;
 *     }
 * }
 */
class Solution {
public:
    /**
     * @param head: The first node of linked list.
     * @return: a tree node
     */
    TreeNode *sortedListToBST(ListNode *head) {
        // write your code here

        if (head == NULL)
            return NULL;
 
        if (!head -> next){
            TreeNode * root = new TreeNode (head -> val);
            return root;
        } 
       
        
        ListNode * slow = head;
        ListNode * fast = head -> next -> next;
        ListNode * tempt = slow;
        
        while (fast && fast -> next && fast -> next -> next){
            tempt = slow;
            slow = slow -> next;
            fast = fast -> next -> next;
        }
            
        TreeNode * root = new TreeNode (slow ->next -> val);
        root -> right = sortedListToBST (slow ->next -> next);
        slow -> next = NULL;
        root -> left = sortedListToBST (head);
        
        return root;
        
    }
};
