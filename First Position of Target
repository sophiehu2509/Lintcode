class Solution {
public:
    /**
     * @param nums: The integer array.
     * @param target: Target number to find.
     * @return: The first position of target. Position starts from 0. 
     */
    int binarySearch(vector<int> &array, int target) {
        // write your code here
        if (array.size() == 0)
            return -1;
            
        int res=0;
        res=findTarget(array, 0, array.size() - 1, target);
        
        return res;
    }
    int findTarget(vector<int> &array, int start, int end, int target)
    {
        int mid = start + (end - start)/2;
        if (start + 1 == end)
        {
            if (array[start] != target && array [end] != target)
                return -1;
        }
        if (start == end && array[start] != target)
        {
                return -1;
        }
        
        if (target < array[mid])
        {
            return findTarget(array, start, mid, target);
        }
        if (target > array[mid])
        {
            return findTarget(array, mid+1, end, target);
        }
        if(target == array[mid])
        {
            for (int i = mid; i>=0; i--)
            {
                if (target == array[i] && i != 0)
                    continue;
                    
                if (target != array[i])
                    return i+1;
                    
                 if (target == array[0])
                    return 0;
            }
           
        }
        
        return -1;
    }
};
