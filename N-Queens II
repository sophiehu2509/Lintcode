class Solution {
public:
    /**
     * Calculate the total number of distinct N-Queen solutions.
     * @param n: The number of queens.
     * @return: The total number of distinct solutions.
     */
    int totalNQueens(int n) {
        // write your code here
        if (n == 1) 
            return 1;
            
        int res = 0;
        vector<int> coll(n, 0);
        vector<int> roww(n, 0);
        put (roww, coll, 0, n, res);
        
        return res;
    }
    
    void put(vector<int>& roww, vector<int> &coll, int row, int & size, int & res)
    {
        if (row == size )
        {
            res ++;
            return;
        }
            
         
        for (int i = 0; i<size; i++)
        {
            
           if (coll[i] == 0){
                roww [row] = i;
                if (check(roww, row, i))
                {
                    coll[i] = 1;
                    put (roww, coll, row+1, size, res);
                    coll[i] = 0;
                }
            }

        }
        
    }
    
    bool check (vector<int>& roww, int row, int col){
        
        for (int i = 0; i< row; i++ )
        {
            if (abs(row-i)==abs(roww[i]-col))
                return false;
            
        }
        return true;
    }
};
