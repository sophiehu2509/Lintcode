class Solution {
public:
    /**
     * @param grid: a list of lists of integers.
     * @return: An integer, minimizes the sum of all numbers along its path
     */
    int minPathSum(vector<vector<int> > &grid) {
        // write your code here
        int row = grid.size();
        int col = grid[0].size();
        vector<vector<int> > vec (row + 1, vector<int> (col +1, 0));
        
        vec [0][0] = grid[0][0];
        
        for (int i =1; i< row; i++)
            vec [i][0] = vec [i-1][0] + grid[i][0];
            
        for (int j =1; j<col; j++)  
            vec [0][j] = vec [0][j-1] + grid[0][j];
            
        for (int i =1; i< row; i++)
            for (int j=1; j< col;j++)
            {
                vec[i][j] = min (vec[i-1][j], vec[i][j-1]) + grid[i][j];
            }
                
                
        return vec [row -1][col -1];
    }
};
