class Solution {
public:    
    /**
     * @param S, T: Two string.
     * @return: Count the number of distinct subsequences
     */
    int numDistinct(string &S, string &T) {
        // write your code here
        int lenS = S.length();//column number
        int lenT = T.length();//row number
        
        if (lenS == 0 || lenT == 0)
            return 1;
        
        vector <vector<int>> vec (lenS + 1, vector<int>(lenT + 1, 0));
        vec[0][0] = 1;
        
        //Initialization for the first row and first column
        for (int i = 0; i<lenS; i++)
            vec[i+1][0] = 1;
        for (int j = 0; j<lenT; j++)
            vec[0][j+1] = 0;
         
        for (int i =0; i<lenS; i++){
            for (int j =0; j<lenT; j++)
            {
                if (T[j] == S[i])
                {
                    vec[i+1][j+1] = vec[i][j] + vec[i][j+1];
                }
                else {
                    vec[i+1][j+1] = vec[i][j+1];
                }
            }
        } 
        
        return vec[lenS][lenT];
    }
};
