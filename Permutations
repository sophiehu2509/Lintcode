class Solution {
public:
    /**
     * @param nums: A list of integers.
     * @return: A list of permutations.
     */
    vector<vector<int> > permute(vector<int> nums) {
        // write your code here
        vector<int> vec;
        vector<vector<int> > res;
        if (nums.size() == 0) return res;
        int n = nums.size();
        vector<bool> visited(n, false);
        
        check(res, visited, vec, nums, 0);
        return res;
        
    }
    void check(vector<vector<int> > & res, vector<bool> & visited, vector<int> & vec, vector<int> & nums, int pos)
    {
        if (vec.size() == nums.size())
        {
            res.push_back(vec);
            return;
        }
        for (int i = 0; i < nums.size(); i++)
        {
            if (visited[i] == false)
            {
                visited[i] = true;
                vec.push_back(nums[i]);
                check(res, visited, vec, nums, i + 1);
                visited[i] = false;
                vec.pop_back();
            }
        }
    }
};
