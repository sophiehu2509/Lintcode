class Solution {
    /** 
     *@param A : an integer sorted array
     *@param target :  an integer to be inserted
     *return : a list of length 2, [index1, index2]
     */
public:
    vector<int> searchRange(vector<int> &A, int target) {
        // write your code here
        
        if (A.size()<=0 ) return {-1, -1};
     
        int p = insertposition (A, (float)(target-0.5));
        int t = insertposition (A, (float)(target+0.5));
         if (p == 0)
        {
            if (A[0] == target)
                p = 0;
            else
                p = -1;
        }
        else
        {
            if (A[p+1] == target)
                p++;
            else
                p = -1;
        }
    
        if (t == A.size()-2)
        {
            if (A[A.size()-1] == target)
                t = A.size()-1;
            else
                t = -1;
        }else {
            if (A[t] != target)
                t = -1;
        }
    
        return {p, t};
    }
    
    int insertposition (vector<int>& nums, float target)
    {
        int start=0; 
        int end=nums.size()-1;
        int mid=0;
    
        while (start+1<end)
        {
            mid=start+(end-start)/2;
            if (target>nums[mid])
            {
                start=mid;
            }else 
            {
                end=mid;
            }
        }
 
        return start;
        
    
    }
};
