class Solution {
public:    
    /**
     * @param word1 & word2: Two string.
     * @return: The minimum number of steps.
     */
    int minDistance(string word1, string word2) {
        // write your code here
        int len1 = word1.length(); //length of column
        int len2 = word2.length(); //length of row
        
        //special cases
        if (len1 == 0 && len2 == 0)
            return 0;
        if (len1 == 0)
            return len2;
        if(len2 == 0)
            return len1;
        
        vector <vector <int>> vec (len2+1, vector <int> (len1+1, 0));
        for (int i = 0; i< len2; i++)
            vec[i+1][0] = i + 1;
            
        for (int j = 0; j< len1; j++)
            vec[0][j+1] = j + 1;
            
        for (int i = 0; i<len2; i++){
            for (int j = 0; j< len1; j++){
                if (word1[j] == word2[i]){
                    vec[i+1][j+1] = vec[i][j];
                }else {
                    vec[i+1][j+1] = min (min (vec[i][j], vec[i][j+1]), vec[i+1][j]) + 1;
                }
            }
                
        }      
        
        return vec[len2][len1];
    
    }
};
