/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}
 * };
 */
class Solution {
public:
    TreeNode* inorderSuccessor(TreeNode* root, TreeNode* p) {
        // write your code here
        if (root == NULL && p == NULL)
            return NULL;
   
        vector<TreeNode*> vec;
        
        inorder (root, vec);
        if (vec.size() == 1)
           return NULL;
            
        for (int i = 0; i <= vec.size()-2; i++)
        {
            if (vec[i]->val == p->val)
            {
                 return vec[i+1];
            }
        }
            
        return NULL;
    }
        
        void inorder (TreeNode* root, vector<TreeNode*> & vec)
        {
            if (root->left == NULL)
            {
              vec.push_back(root);
                
                if (root->right != NULL)
                {
                    inorder (root->right, vec);
                }
                
                return;
            }
              
             if (root->left != NULL)
             {
                inorder (root->left, vec);
                
               if (root->left != NULL)
                    vec.push_back(root);
                    
                if (root->right != NULL)
                {
                    inorder (root->right, vec);
                    
                    if (root->right->left != NULL)
                       vec.push_back(root->right);
                }
             }
        }
};
