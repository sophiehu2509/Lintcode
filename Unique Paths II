class Solution {
public:
    /**
     * @param obstacleGrid: A list of lists of integers
     * @return: An integer
     */ 
    int uniquePathsWithObstacles(vector<vector<int> > &obstacleGrid) {
        // write your code here
        
        int row =  obstacleGrid.size();
        int col = obstacleGrid[0].size();
        
        vector<vector<int> > vec (row + 1, vector<int> (col + 1, 0));
       
        if (obstacleGrid[0][0] == 1)
            vec[0][0] = 0;
        else 
            vec[0][0] = 1;
            
        for (int i = 1; i< row; i++){
            if (obstacleGrid[i][0] || !vec[i-1][0])
                vec[i][0] = 0;
            else 
                vec[i][0] = 1;
        }
        
        for (int j = 1; j<col; j++){
            if (obstacleGrid[0][j] || !vec[0][j - 1])
                vec[0][j] = 0;
            else 
                vec[0][j] = 1;
        }
        
        for (int i = 1; i< row; i++)
            for (int j = 1; j< col; j++)
                if (obstacleGrid [i][j] == 0)
                    vec[i][j] = vec[i-1][j] + vec[i][j-1];
                else 
                    vec[i][j] = 0;
                
    
        return vec[row-1][col-1];
    }
};
